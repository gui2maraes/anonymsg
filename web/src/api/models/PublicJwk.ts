/* tslint:disable */
/* eslint-disable */
/**
 * BlindChannel REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PublicJwk
 */
export interface PublicJwk {
    /**
     * 
     * @type {string}
     * @memberof PublicJwk
     */
    e: PublicJwkEEnum;
    /**
     * 
     * @type {string}
     * @memberof PublicJwk
     */
    n: string;
    /**
     * 
     * @type {string}
     * @memberof PublicJwk
     */
    alg: PublicJwkAlgEnum;
    /**
     * 
     * @type {string}
     * @memberof PublicJwk
     */
    kty: PublicJwkKtyEnum;
    /**
     * 
     * @type {string}
     * @memberof PublicJwk
     */
    use?: PublicJwkUseEnum;
}


/**
 * @export
 */
export const PublicJwkEEnum = {
    Aqab: 'AQAB',
    Aqab2: 'AQAB=='
} as const;
export type PublicJwkEEnum = typeof PublicJwkEEnum[keyof typeof PublicJwkEEnum];

/**
 * @export
 */
export const PublicJwkAlgEnum = {
    RsaOaep256: 'RSA-OAEP-256'
} as const;
export type PublicJwkAlgEnum = typeof PublicJwkAlgEnum[keyof typeof PublicJwkAlgEnum];

/**
 * @export
 */
export const PublicJwkKtyEnum = {
    Rsa: 'RSA'
} as const;
export type PublicJwkKtyEnum = typeof PublicJwkKtyEnum[keyof typeof PublicJwkKtyEnum];

/**
 * @export
 */
export const PublicJwkUseEnum = {
    Enc: 'enc'
} as const;
export type PublicJwkUseEnum = typeof PublicJwkUseEnum[keyof typeof PublicJwkUseEnum];


/**
 * Check if a given object implements the PublicJwk interface.
 */
export function instanceOfPublicJwk(value: object): value is PublicJwk {
    if (!('e' in value) || value['e'] === undefined) return false;
    if (!('n' in value) || value['n'] === undefined) return false;
    if (!('alg' in value) || value['alg'] === undefined) return false;
    if (!('kty' in value) || value['kty'] === undefined) return false;
    return true;
}

export function PublicJwkFromJSON(json: any): PublicJwk {
    return PublicJwkFromJSONTyped(json, false);
}

export function PublicJwkFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicJwk {
    if (json == null) {
        return json;
    }
    return {
        
        'e': json['e'],
        'n': json['n'],
        'alg': json['alg'],
        'kty': json['kty'],
        'use': json['use'] == null ? undefined : json['use'],
    };
}

export function PublicJwkToJSON(value?: PublicJwk | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'e': value['e'],
        'n': value['n'],
        'alg': value['alg'],
        'kty': value['kty'],
        'use': value['use'],
    };
}

